@{
  Layout = "_Layout";
}

@using ToDoList.Models;
@model List<ToDoList.Models.Item>; //view needs access to list of items and this allows that using directive acces

<h1>Items</h1>

@if (@Model.Count == 0)
{
  <h3>No items have been added yet!</h3>
}
<ul>
  @foreach(Item item in Model)
  {
    //string interpolation is used below: $"{variable}" it uses the value of the variable as a string.
    //actionlink goes goes to Details controller action
    //new { id = item.ItemId} creates an anonymous object with the id property. this is how .NET knows which id to use in Details action. 
    //Property names of the object we pass in must match paramenter names used by the target method. 
    <li>@Html.ActionLink($"{item.Description}", "Details", new { id = item.ItemId }) | @item.Category.Name</li>
  }
</ul>

<p>@Html.ActionLink("Add new item", "Create")</p>